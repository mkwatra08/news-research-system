version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: news-research-postgres
    environment:
      POSTGRES_DB: news_research
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - news-research-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for caching and background tasks)
  redis:
    image: redis:7-alpine
    container_name: news-research-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - news-research-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # News Research API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: news-research-api
    environment:
      # Database Configuration
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/news_research
      
      # Redis Configuration
      REDIS_URL: redis://redis:6379/0
      
      # API Configuration
      API_HOST: 0.0.0.0
      API_PORT: 8000
      DEBUG: false
      
      # Vector Store Configuration
      VECTOR_STORE_TYPE: faiss
      FAISS_INDEX_PATH: /app/data/faiss_index
      
      # AI Model Configuration (set your API keys)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-your_openai_api_key_here}
      OPENAI_MODEL: gpt-4
      EMBEDDING_MODEL: text-embedding-3-small
      MAX_TOKENS: 2000
      
      # News API Configuration (optional)
      NEWS_API_KEY: ${NEWS_API_KEY:-}
      
      # Scraping Configuration
      MAX_ARTICLES_PER_QUERY: 50
      SCRAPING_TIMEOUT: 30
      USER_AGENT: "Mozilla/5.0 (compatible; NewsResearchBot/1.0)"
      
      # Cache Configuration
      CACHE_TTL: 3600
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - news-research-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Nginx (reverse proxy and load balancer)
  nginx:
    image: nginx:alpine
    container_name: news-research-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - news-research-network
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  news-research-network:
    driver: bridge